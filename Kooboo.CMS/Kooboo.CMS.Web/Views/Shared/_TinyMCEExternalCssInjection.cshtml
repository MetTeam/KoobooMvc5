@{
    // inject all css files of current site into TinyMCE editor (when edit html blocks & and richtext fields of text contents)
    var site = Site.Current.AsActual();
    var css = string.Empty;
    if (!string.IsNullOrEmpty(site.Theme))
    {
        string cssHackBody;
        var themefiles = Kooboo.CMS.Sites.Parsers.ThemeRule.ThemeRuleParser.Parse(new Theme(site, site.Theme).LastVersion(), out cssHackBody);
        var files = themefiles.Where(o => o.PhysicalPath.EndsWith(".css", StringComparison.CurrentCultureIgnoreCase))
                              .Select(o => Kooboo.Web.Url.UrlUtility.ResolveUrl(o.VirtualPath)).ToList();
        css = string.Join(",", files);
    }

    if (!string.IsNullOrEmpty(css))
    {
        <script type="text/javascript">
            (function () {
                var old = tinymce.getKoobooConfig;
                var config = old();
                if (!!!config.content_css) {
                    tinymce.getKoobooConfig = function () {
                        var ret = old.apply(this, arguments);
                        ret.content_css = '@Html.Raw(css) ';
                        return ret;
                    };
                }
            }());

            $(function () {
                setTimeout(function () {
                    $(".@(FormHelper.CSSLoadTogglerNameSuffix)").each(function () {
                        var fieldId = $(this).attr("id");
                        var fieldName = fieldId.substring(0, fieldId.indexOf('@FormHelper.CSSLoadTogglerNameSuffix'));
                        var $iframeHead = $('#' + fieldName + '@(FormHelper.TinymceIframeIdSuffix)').contents().find('head');
                        var $siteCssClone = $iframeHead.find('link[rel="stylesheet"]').filter(function () {
                            return this.href.toLowerCase().indexOf('/cms_data/sites/') > -1;
                        }).clone();

                        $(this).change(function () {
                            if ($(this).is(':checked')) {
                                $iframeHead.append($siteCssClone);
                            } else {
                                var $siteCss = $iframeHead.find('link[rel="stylesheet"]').filter(function () {
                                    return this.href.toLowerCase().indexOf('@FormHelper.SiteCssPathIdentifier') > -1;
                                });
                                $siteCss.each(function () {
                                    $(this).remove();
                                });
                            }
                        });
                    });
                }, 1000);
            });
        </script>
    }
}