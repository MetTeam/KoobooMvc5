@{
    // inject all css files of current site into TinyMCE editor (when edit html blocks & and richtext fields of text contents)
    var site = Site.Current.AsActual();
    var css = string.Empty;
    if (!string.IsNullOrEmpty(site.Theme))
    {
        string cssHackBody;
        var themefiles = Kooboo.CMS.Sites.Parsers.ThemeRule.ThemeRuleParser.Parse(new Theme(site, site.Theme).LastVersion(), out cssHackBody);
        var files = themefiles.Where(o => o.PhysicalPath.EndsWith(".css", StringComparison.CurrentCultureIgnoreCase))
                              .Select(o => Kooboo.Web.Url.UrlUtility.ResolveUrl(o.VirtualPath)).ToList();
        css = string.Join(",", files);
    }

    if (!string.IsNullOrEmpty(css))
    {
        <script type="text/javascript">
            (function () {
                var old = tinymce.getKoobooConfig;
                var config = old();
                if (!!!config.content_css) {
                    tinymce.getKoobooConfig = function () {
                        var ret = old.apply(this, arguments);
                        ret.content_css = '@Html.Raw(css) ';
                        return ret;
                    };
                }
            }());
        </script>
    }
}